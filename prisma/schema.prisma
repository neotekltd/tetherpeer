// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  BANNED
}

enum TradeStatus {
  CREATED
  ESCROW_FUNDED
  PAYMENT_PENDING
  PAYMENT_SENT
  PAYMENT_CONFIRMED
  COMPLETED
  DISPUTED
  REFUNDED
  CANCELLED
}

enum PaymentMethod {
  FLOUCI
  D17
}

enum Network {
  TRC20
  ERC20
  POLYGON
}

enum OfferStatus {
  OPEN
  CLOSED
  CANCELLED
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  phone         String    @unique
  rating        Float     @default(3.0)
  status        UserStatus @default(ACTIVE)
  tradeLimit    Float     @default(500) // Daily trade limit in TND
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?
  deviceHash    String?   // For basic fraud prevention
  publicKey     String?   // User's public key for multisig
  buyTrades     Trade[]   @relation("BuyerTrades")
  sellTrades    Trade[]   @relation("SellerTrades")
  ratings       Rating[]  @relation("UserRatings")
  givenRatings  Rating[]  @relation("RaterRatings")
  disputes      Dispute[] @relation("UserDisputes")
  offers        Offer[]
  code          String?
  isVerified    Boolean   @default(false)
  
  @@index([email])
  @@index([phone])
}

model Offer {
  id            String        @id @default(cuid())
  userId        String
  amount        Float
  price         Float
  paymentMethod PaymentMethod
  network       Network
  status        OfferStatus   @default(OPEN)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id])
  trades        Trade[]
}

model Trade {
  id            String      @id @default(cuid())
  offerId       String
  buyerId       String
  amount        Float
  price         Float
  status        TradeStatus @default(PENDING)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  offer         Offer       @relation(fields: [offerId], references: [id])
  buyer         User        @relation(fields: [buyerId], references: [id])
  escrowAddress String?
  txHash        String?
  seller        User        @relation("SellerTrades", fields: [sellerId], references: [id])
  sellerId      String
  paymentProof  String?     // Encrypted payment proof hash
  expiresAt     DateTime    // Auto-refund timeout
  dispute       Dispute?
  rating        Rating?
  
  @@index([sellerId])
  @@index([buyerId])
  @@index([status])
  @@index([createdAt])
}

model Rating {
  id          String    @id @default(uuid())
  trade       Trade     @relation(fields: [tradeId], references: [id])
  tradeId     String    @unique
  user        User      @relation("UserRatings", fields: [userId], references: [id])
  userId      String
  rater       User      @relation("RaterRatings", fields: [raterId], references: [id])
  raterId     String
  score       Int       @default(3) // 1-5 stars
  comment     String?
  createdAt   DateTime  @default(now())
  
  @@index([userId])
  @@index([raterId])
}

model Dispute {
  id          String    @id @default(uuid())
  trade       Trade     @relation(fields: [tradeId], references: [id])
  tradeId     String    @unique
  user        User      @relation("UserDisputes", fields: [userId], references: [id])
  userId      String
  reason      String
  evidence    String?   // Encrypted evidence hash
  resolution  String?
  status      String    @default("OPEN") // OPEN, RESOLVED, CLOSED
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  @@index([userId])
  @@index([status])
}

// For encrypted chat messages
model Message {
  id          String    @id @default(uuid())
  tradeId     String
  senderId    String
  content     String    // E2E encrypted content
  createdAt   DateTime  @default(now())
  
  @@index([tradeId])
  @@index([senderId])
  @@index([createdAt])
}
